"use strict";(self.webpackChunkdoca_test=self.webpackChunkdoca_test||[]).push([[704],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(n),g=a,d=p["".concat(u,".").concat(g)]||p[g]||m[g]||o;return n?r.createElement(d,i(i({ref:t},s),{},{components:n})):r.createElement(d,i({ref:t},s))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8028:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={},u="GitHub Panic Moves",c={unversionedId:"Programming/git/panic",id:"Programming/git/panic",title:"GitHub Panic Moves",description:"Undo Last Push",source:"@site/docs/Programming/git/panic.md",sourceDirName:"Programming/git",slug:"/Programming/git/panic",permalink:"/Programming/git/panic",draft:!1,editUrl:"https://github.com/karimould/knowledge/docs/Programming/git/panic.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Math - Linear Algebra",permalink:"/Math/linear algebra/links"},next:{title:"Deno",permalink:"/Programming languages/Deno/links"}},s={},m=[{value:"Undo Last Push",id:"undo-last-push",level:2},{value:"Undo Last Commit",id:"undo-last-commit",level:2},{value:"Undo Multiple Commits",id:"undo-multiple-commits",level:2}],p={toc:m};function g(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"github-panic-moves"},"GitHub Panic Moves"),(0,o.kt)("h2",{id:"undo-last-push"},"Undo Last Push"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"See last commits:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git log\n")),(0,o.kt)("p",null,"or (I prefer this one)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git log --oneline\n")),(0,o.kt)("p",null,"Get the hash from the commit I want to undo."),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Undo commit with hash")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git revert <commit hash> --no-edit\n")),(0,o.kt)("p",null,"The no-edit flag prevents git to ask for a commit message."),(0,o.kt)("h2",{id:"undo-last-commit"},"Undo Last Commit"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git reset --soft HEAD~\n")),(0,o.kt)("h2",{id:"undo-multiple-commits"},"Undo Multiple Commits"),(0,o.kt)("p",null,"Add a number to the ~ symbol."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git reset --soft HEAD~<NUMBER OF COMMITS>\n")),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git reset --soft HEAD~2\n")),(0,o.kt)("p",null,"Undos the last 2 commits, which were not pushed."))}g.isMDXComponent=!0}}]);